<div class="row">
  <div class="large-12 medium-12 small-12 small-centered columns">
    <h1 class="text-center"><%=@course.name.split.map(&:capitalize)*' '  %> <small id="address"><%= @course.location.split.map(&:capitalize)*' ' %></small></h1>
  </div>
</div>

<div class="row align-middle">
  <div class="large-7 medium-7 small-11 small-centered columns">
    <img class="course-image" src="<%= @course.image %>">
  </div>
  <div class="large-5 medium-5 small-10 small-centered columns">
    <div class="map_container">
      <div id="map" class="map course-image"></div>
    </div>
  </div>
</div>

<div class="row">
  <div class="large-12 columns">
    <h3><%= number_to_currency(@course.price) %>
    <a href="<%= @course.url %>">   <%= @course.url %>  </a></h3>
  </div>
</div>

<div class="row">
  <div class="large-3 columns">
    <div id="weather"></div>
  </div>
  <div class="large-3 columns">
    Clubhouse: <%= rating_for @course, "clubhouse",disabled_after_rate:true, enable_half:true, readonly:true, imdb_avg: true ,star_path: '/images/ratyrate'%>
    Conditions: </h5><%= rating_for @course, "conditions",disabled_after_rate:true, enable_half:true, readonly:true, imdb_avg: true ,star_path: '/images/ratyrate'%>
    Scenery: <%= rating_for @course, "scenery",disabled_after_rate:true, enable_half:true, readonly:true, imdb_avg: true,star_path: '/images/ratyrate' %>
    Worth: <%= rating_for @course, "worth",disabled_after_rate:true, enable_half:true, readonly:true, imdb_avg: true,star_path: '/images/ratyrate' %>
  </div>
  <div class="large-6 columns">
    <h2>Matches:</h2> <br>
    <% @course.matches.each do |match| %>
      <%= link_to match.title, match %><br>
      Time and Date:<strong><%= match.date.strftime("%m/%d/%Y")%>   <%= match.time.strftime("%H:%M") %></strong><br>
      <%= match.course.name %><br>
    <% end %><br>
    <strong><button class="button primary" data-open="exampleModal">New Match at this Course</button></strong>
    <div class="reveal" id="exampleModal" data-reveal>
      <%= render 'matches/form' %>
      <button class="close-button" data-close aria-label="Close modal" type="button">
        <span aria-hidden="true">&times;</span></button>
    </div><br>
  </div>
</div>
<% if @course.comments.length > 0 %>
  <div class="row pad-down">
    <div class="large-7 large-centered columns">
      <h3><i class="fi-comments"></i>  Comments:</h3>
      <div class="callout">
        <% @comments = @course.comments.order(created_at: :desc) %>
        <% @comments.each do |c| %>
          <div class="row">
            <div class="small-8 columns">
              <h5><%= c.body %></h5>
              <h5>Written By: <small><%=link_to c.user.email.capitalize, c.user %></small></h5>
            </div>
          </div>
          <% if current_user %>
            <% if current_user.id == c.user_id %>
              <%= link_to "Delete Comment", course_comment_path(@course,c), method: :delete, class:"button small warning" %>
              <%= link_to "Edit Comment", edit_course_comment_path(@course,c), class:"button secondary small" %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    <% if current_user %>
  <strong><button class="button success" data-open="commentModal">Comment on Course</button></strong>
    <div class="reveal" id="commentModal" data-reveal>
      <%= render 'comments/form' %>
      <button class="close-button" data-close aria-label="Close modal" type="button">
      <span aria-hidden="true">&times;</span></button>
    </div><br>
  <% end %>
</div>

<script>
  var address = $('#address').text();
  console.log(address)
  $.ajax({
    method: "GET",
    url: "http://api.openweathermap.org/data/2.5/weather?q="+address+"&appid=59ff86fd6f633dfdaf0b8aef03cedc7b",
    success: getCourseSuccess
  })
  function getCourseSuccess(course){
    console.log(course);
    var humidity = course.main.humidity;
    var pressure = course.main.pressure;
    var temp_avg =  course.main.temp;
    var temp_min = course.main.temp_min;
    var temp_max = course.main.temp_max;
    var weather = course.weather[0].description;
    var main = course.weather[0].main;
    var deg = course.wind.deg;
    var speed = course.wind.speed;
    console.log(humidity, pressure, temp_avg ,temp_min, temp_max, weather, main ,deg ,speed);
    $('#weather').html("<ul><li>Humidity: "+humidity+"</li>"+"<li>Pressure: "+pressure+"</li><li>Average Temp: "+temp_avg+"</li><li>Max Temp: "+
  temp_max+"</li><li>Min Temp: "+temp_min+"</li><li>Weather Description: "+weather+"</li><li>Wind Speed: "+speed+"</li><li>Wind Degree: "+deg+"</li></ul>")
  }

  function initMap() {
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 13,
      // center: {lat: -34.397, lng: 150.644}
    });
    var geocoder = new google.maps.Geocoder();

    window.addEventListener('load', function() {
      geocodeAddress(geocoder, map);
    });
  }

  function geocodeAddress(geocoder, resultsMap) {
    geocoder.geocode({'address': address}, function(results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        resultsMap.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: resultsMap,
          position: results[0].geometry.location
        });
      } else {
        alert('Geocode was not successful for the following reason: ' + status);
      }
    });
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBGiFYWpvaKcbMBbaTZfjOiAWznTyVfxXc&callback=initMap" async defer></script>
